
    
# Auto-generated by bin/generate-schema
# DO NOT EDIT MANUALLY, ALL CHANGES WILL BE OVERWRITTEN

type Achievement {
  name: String!
  achieved: Boolean!
}

type PlayerAccountStats {
  competitiveRank: Int
  achievements: [Achievement!]!
  quickplay: GamemodeStats!
  competitive: GamemodeStats!
}

type PlayerAccount {
  level: Int!
  region: String!
  displayName: String!
  platform: String!
  stats: PlayerAccountStats!
  portrait: String!
}

type Player {
  name: String!
  accounts: [PlayerAccount!]!
  account(region: String!, platform: String!): PlayerAccount
}

type Query {
  player(name: String!): Player
}


    # == The following types are auto-generated ==

    union HeroStats = AllStats | TracerStats | WidowmakerStats | GenjiStats | MccreeStats | ReaperStats | MercyStats | HanzoStats | TorbjornStats | ReinhardtStats | PharahStats | WinstonStats | BastionStats | SymmetraStats | ZenyattaStats | RoadhogStats | JunkratStats | ZaryaStats | Soldier76Stats | LucioStats | DvaStats | MeiStats | AnaStats | OrisaStats | SombraStats | DoomfistStats | MoiraStats
    type GamemodeStats {
      all: AllStats
tracer: TracerStats
widowmaker: WidowmakerStats
genji: GenjiStats
mccree: MccreeStats
reaper: ReaperStats
mercy: MercyStats
hanzo: HanzoStats
torbjorn: TorbjornStats
reinhardt: ReinhardtStats
pharah: PharahStats
winston: WinstonStats
bastion: BastionStats
symmetra: SymmetraStats
zenyatta: ZenyattaStats
roadhog: RoadhogStats
junkrat: JunkratStats
zarya: ZaryaStats
soldier76: Soldier76Stats
lucio: LucioStats
dva: DvaStats
mei: MeiStats
ana: AnaStats
orisa: OrisaStats
sombra: SombraStats
doomfist: DoomfistStats
moira: MoiraStats
    }

    
        # == all types ==

        
type AllCombatStats { barrierDamageDone: Int!
    meleeFinalBlows: Int!
    deaths: Int!
    heroDamageDone: Int!
    timeSpentOnFire: String!
    soloKills: Int!
    objectiveTime: String!
    objectiveKills: Int!
    finalBlows: Int!
    eliminations: Int!
    allDamageDone: Int!
    environmentalKills: Int!
    multikills: Int! }
type AllAssistsStats { healingDone: Int!
    reconAssists: Int!
    offensiveAssists: Int!
    defensiveAssists: Int!
    teleporterPadsDestroyed: Int!
    teleporterPadDestroyed: Int! }
type AllBestStats { eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    allDamageDoneMostInGame: Int!
    healingDoneMostInGame: Int!
    defensiveAssistsMostInGame: Int!
    offensiveAssistsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    timeSpentOnFireMostInGame: String!
    meleeFinalBlowsMostInGame: Int!
    shieldGeneratorDestroyedMostInGame: Int!
    turretsDestroyedMostInGame: Int!
    environmentalKillsMostInGame: Int!
    killStreakBest: Int!
    heroDamageDoneMostInGame: Int!
    barrierDamageDoneMostInGame: Int!
    reconAssistsMostInGame: Int!
    shieldGeneratorsDestroyedMostInGame: Int!
    teleporterPadsDestroyedMostInGame: Int!
    teleporterPadDestroyedMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type AllAverageStats { barrierDamageDoneAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    healingDoneAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    allDamageDoneAvgPer10Min: Int! }
type AllAwardsStats { cards: Int!
    medals: Int!
    medalsGold: Int!
    medalsSilver: Int!
    medalsBronze: Int! }
type AllGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int! }
type AllMiscStats { shieldGeneratorDestroyed: Int!
    turretsDestroyed: Int!
    shieldGeneratorsDestroyed: Int! }
        type AllStats {
          
  combat: AllCombatStats
  assists: AllAssistsStats
  best: AllBestStats
  average: AllAverageStats
  awards: AllAwardsStats
  game: AllGameStats
  misc: AllMiscStats
        }
      

        # == tracer types ==

        
type TracerHeroStats { pulseBombKills: Int!
    pulseBombKillsMostInGame: Int!
    pulseBombsAttachedMostInGame: Int!
    pulseBombsAttached: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    healthRecovered: Int!
    healthRecoveredMostInGame: Int!
    pulseBombsAttachedAvgPer10Min: Int!
    pulseBombKillsAvgPer10Min: Int!
    healthRecoveredAvgPer10Min: Int!
    selfHealingAvgPer10Min: Int! }
type TracerCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    multikill: Int! }
type TracerAssistsStats { turretsDestroyed: Int!
    teleporterPadDestroyed: Int! }
type TracerBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int! }
type TracerAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type TracerAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type TracerGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
type TracerMiscStats { shieldGeneratorDestroyed: Int!
    shieldGeneratorsDestroyed: Int! }
        type TracerStats {
          
  hero: TracerHeroStats
  combat: TracerCombatStats
  assists: TracerAssistsStats
  best: TracerBestStats
  average: TracerAverageStats
  awards: TracerAwardsStats
  game: TracerGameStats
  misc: TracerMiscStats
        }
      

        # == widowmaker types ==

        
type WidowmakerHeroStats { venomMineKills: Int!
    scopedCriticalHits: Int!
    scopedCriticalHitsMostInGame: Int!
    venomMineKillsMostInGame: Int!
    scopedAccuracyBestInGame: Int!
    venomMineKillsAvgPer10Min: Int!
    scopedCriticalHitsAvgPer10Min: Int!
    scopedAccuracy: Int!
    venomMineKill: Int!
    venomMineKillMostInGame: Int! }
type WidowmakerCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    meleeFinalBlow: Int!
    objectiveKill: Int!
    multikill: Int! }
type WidowmakerAssistsStats { reconAssists: Int!
    reconAssistsMostInGame: Int!
    turretsDestroyed: Int!
    reconAssistsAvgPer10Min: Int! }
type WidowmakerBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    objectiveKillMostInGame: Int! }
type WidowmakerAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    eliminationPerLife: Int! }
type WidowmakerAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type WidowmakerGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type WidowmakerStats {
          
  hero: WidowmakerHeroStats
  combat: WidowmakerCombatStats
  assists: WidowmakerAssistsStats
  best: WidowmakerBestStats
  average: WidowmakerAverageStats
  awards: WidowmakerAwardsStats
  game: WidowmakerGameStats
        }
      

        # == genji types ==

        
type GenjiHeroStats { dragonbladeKills: Int!
    dragonbladeKillsMostInGame: Int!
    damageReflected: Int!
    damageReflectedMostInGame: Int!
    dragonblades: Int!
    dragonbladeKillsAvgPer10Min: Int!
    damageReflectedAvgPer10Min: Int! }
type GenjiCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    multikill: Int! }
type GenjiAssistsStats { turretsDestroyed: Int! }
type GenjiBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    soloKillMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type GenjiAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type GenjiAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type GenjiGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type GenjiStats {
          
  hero: GenjiHeroStats
  combat: GenjiCombatStats
  assists: GenjiAssistsStats
  best: GenjiBestStats
  average: GenjiAverageStats
  awards: GenjiAwardsStats
  game: GenjiGameStats
        }
      

        # == mccree types ==

        
type MccreeHeroStats { deadeyeKills: Int!
    deadeyeKillsMostInGame: Int!
    fanTheHammerKills: Int!
    fanTheHammerKillsMostInGame: Int!
    fanTheHammerKillsAvgPer10Min: Int!
    deadeyeKillsAvgPer10Min: Int! }
type MccreeCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    meleeFinalBlow: Int!
    multikill: Int! }
type MccreeAssistsStats { turretsDestroyed: Int!
    teleporterPadDestroyed: Int! }
type MccreeBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int! }
type MccreeAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type MccreeAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int!
    card: Int! }
type MccreeGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type MccreeStats {
          
  hero: MccreeHeroStats
  combat: MccreeCombatStats
  assists: MccreeAssistsStats
  best: MccreeBestStats
  average: MccreeAverageStats
  awards: MccreeAwardsStats
  game: MccreeGameStats
        }
      

        # == reaper types ==

        
type ReaperHeroStats { selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int! }
type ReaperCombatStats { elimination: Int!
    deaths: Int!
    allDamageDone: Int!
    criticalHits: Int!
    heroDamageDone: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    eliminations: Int!
    death: Int!
    objectiveTime: String! }
type ReaperBestStats { eliminationMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    eliminationsMostInLife: Int!
    eliminationsMostInGame: Int!
    objectiveTimeMostInGame: String! }
type ReaperAverageStats { criticalHitsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Int!
    allDamageDoneAvgPer10Min: Float!
    objectiveTimeAvgPer10Min: Int! }
type ReaperAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int! }
type ReaperGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type ReaperStats {
          
  hero: ReaperHeroStats
  combat: ReaperCombatStats
  best: ReaperBestStats
  average: ReaperAverageStats
  awards: ReaperAwardsStats
  game: ReaperGameStats
        }
      

        # == mercy types ==

        
type MercyHeroStats { blasterKills: Int!
    blasterKillsMostInGame: Int!
    playersResurrected: Int!
    playersResurrectedMostInGame: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    damageAmplified: Int!
    damageAmplifiedMostInGame: Int!
    selfHealingAvgPer10Min: Int!
    damageAmplifiedAvgPer10Min: Int!
    playersResurrectedAvgPer10Min: Int!
    blasterKillsAvgPer10Min: Int! }
type MercyCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    finalBlow: Int!
    objectiveKill: Int! }
type MercyAssistsStats { turretDestroyed: Int!
    offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int! }
type MercyBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    eliminationMostInLife: Int!
    finalBlowMostInGame: Int!
    criticalHitMostInLife: Int!
    objectiveKillsMostInGame: Int! }
type MercyAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type MercyAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type MercyGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type MercyStats {
          
  hero: MercyHeroStats
  combat: MercyCombatStats
  assists: MercyAssistsStats
  best: MercyBestStats
  average: MercyAverageStats
  awards: MercyAwardsStats
  game: MercyGameStats
        }
      

        # == hanzo types ==

        
type HanzoHeroStats { dragonstrikeKills: Int!
    dragonstrikeKillsMostInGame: Int!
    scatterArrowKills: Int!
    scatterArrowKillsMostInGame: Int!
    scatterArrowKillsAvgPer10Min: Int!
    dragonstrikeKillsAvgPer10Min: Int! }
type HanzoCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlow: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int! }
type HanzoAssistsStats { reconAssists: Int!
    reconAssistsMostInGame: Int!
    reconAssistsAvgPer10Min: Int!
    reconAssist: Int!
    reconAssistMostInGame: Int!
    turretDestroyed: Int! }
type HanzoBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int! }
type HanzoAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Int!
    allDamageDoneAvgPer10Min: Float!
    eliminationPerLife: Int! }
type HanzoAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int! }
type HanzoGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type HanzoStats {
          
  hero: HanzoHeroStats
  combat: HanzoCombatStats
  assists: HanzoAssistsStats
  best: HanzoBestStats
  average: HanzoAverageStats
  awards: HanzoAwardsStats
  game: HanzoGameStats
        }
      

        # == torbjorn types ==

        
type TorbjornHeroStats { armorPacksCreated: Int!
    torbjornKills: Int!
    turretKills: Int!
    torbjornKillsMostInGame: Int!
    armorPacksCreatedMostInGame: Int!
    turretKillsMostInGame: Int!
    moltenCoreKills: Int!
    moltenCoreKillsMostInGame: Int!
    turretKillsAvgPer10Min: Int!
    torbjornKillsAvgPer10Min: Int!
    moltenCoreKillsAvgPer10Min: Int!
    armorPacksCreatedAvgPer10Min: Int! }
type TorbjornCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    meleeFinalBlow: Int! }
type TorbjornBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type TorbjornAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type TorbjornAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type TorbjornGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type TorbjornStats {
          
  hero: TorbjornHeroStats
  combat: TorbjornCombatStats
  best: TorbjornBestStats
  average: TorbjornAverageStats
  awards: TorbjornAwardsStats
  game: TorbjornGameStats
        }
      

        # == reinhardt types ==

        
type ReinhardtHeroStats { damageBlocked: Int!
    damageBlockedMostInGame: Int!
    chargeKills: Int!
    chargeKillsMostInGame: Int!
    fireStrikeKill: Int!
    fireStrikeKillMostInGame: Int!
    earthshatterKills: Int!
    earthshatterKillsMostInGame: Int!
    rocketHammerMeleeAccuracy: Int!
    fireStrikeKillsAvgPer10Min: Int!
    earthshatterKillsAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int!
    chargeKillsAvgPer10Min: Int!
    fireStrikeKills: Int!
    fireStrikeKillsMostInGame: Int!
    chargeKill: Int!
    chargeKillMostInGame: Int!
    earthshatterKill: Int!
    earthshatterKillMostInGame: Int! }
type ReinhardtCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    soloKills: Int!
    multikill: Int!
    finalBlow: Int! }
type ReinhardtAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    offensiveAssist: Int!
    offensiveAssistMostInGame: Int! }
type ReinhardtBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    finalBlowMostInGame: Int! }
type ReinhardtAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    soloKillsAvgPer10Min: Int! }
type ReinhardtAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    card: Int! }
type ReinhardtGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type ReinhardtStats {
          
  hero: ReinhardtHeroStats
  combat: ReinhardtCombatStats
  assists: ReinhardtAssistsStats
  best: ReinhardtBestStats
  average: ReinhardtAverageStats
  awards: ReinhardtAwardsStats
  game: ReinhardtGameStats
        }
      

        # == pharah types ==

        
type PharahHeroStats { rocketDirectHits: Int!
    barrageKills: Int!
    rocketDirectHitsMostInGame: Int!
    barrageKillsMostInGame: Int!
    rocketDirectHitsAvgPer10Min: Int!
    barrageKillsAvgPer10Min: Int! }
type PharahCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    environmentalKills: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    multikills: Int!
    meleeFinalBlow: Int! }
type PharahBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    meleeFinalBlowMostInGame: Int! }
type PharahAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type PharahAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type PharahGameStats { timePlayed: Float!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int!
    gamesTied: Int! }
type PharahAssistsStats { teleporterPadDestroyed: Int!
    turretsDestroyed: Int! }
        type PharahStats {
          
  hero: PharahHeroStats
  combat: PharahCombatStats
  best: PharahBestStats
  average: PharahAverageStats
  awards: PharahAwardsStats
  game: PharahGameStats
  assists: PharahAssistsStats
        }
      

        # == winston types ==

        
type WinstonHeroStats { playersKnockedBack: Int!
    damageBlocked: Int!
    damageBlockedMostInGame: Int!
    playersKnockedBackMostInGame: Int!
    meleeKills: Int!
    meleeKillsMostInGame: Int!
    jumpPackKills: Int!
    jumpPackKillsMostInGame: Int!
    primalRageKills: Int!
    primalRageKillsMostInGame: Int!
    primalRageMeleeAccuracy: Int!
    teslaCannonAccuracy: Int!
    primalRageKillsAvgPer10Min: Int!
    playersKnockedBackAvgPer10Min: Int!
    meleeKillsAvgPer10Min: Int!
    jumpPackKillsAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int!
    primalRageKillMostInGame: Int! }
type WinstonCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlow: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    soloKills: Int!
    multikills: Int!
    environmentalKills: Int!
    meleeFinalBlows: Int! }
type WinstonBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    meleeFinalBlowsMostInGame: Int! }
type WinstonAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    soloKillsAvgPer10Min: Int! }
type WinstonAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    card: Int!
    cards: Int! }
type WinstonGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int!
    gamesTied: Int! }
type WinstonMiscStats { weaponKills: Int!
    meleeKills: Int!
    jumpKills: Int! }
type WinstonAssistsStats { turretsDestroyed: Int! }
        type WinstonStats {
          
  hero: WinstonHeroStats
  combat: WinstonCombatStats
  best: WinstonBestStats
  average: WinstonAverageStats
  awards: WinstonAwardsStats
  game: WinstonGameStats
  misc: WinstonMiscStats
  assists: WinstonAssistsStats
        }
      

        # == bastion types ==

        
type BastionHeroStats { reconKills: Int!
    sentryKills: Int!
    tankKills: Int!
    sentryKillsMostInGame: Int!
    reconKillsMostInGame: Int!
    tankKillsMostInGame: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int!
    tankKillsAvgPer10Min: Int!
    sentryKillsAvgPer10Min: Int!
    reconKillsAvgPer10Min: Int! }
type BastionCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlow: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int! }
type BastionBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int! }
type BastionAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type BastionAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    card: Int! }
type BastionGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int!
    gamesTied: Int! }
        type BastionStats {
          
  hero: BastionHeroStats
  combat: BastionCombatStats
  best: BastionBestStats
  average: BastionAverageStats
  awards: BastionAwardsStats
  game: BastionGameStats
        }
      

        # == symmetra types ==

        
type SymmetraHeroStats { damageBlocked: Int!
    damageBlockedMostInGame: Int!
    damageBlockedAvgPer10Min: Int! }
type SymmetraCombatStats { elimination: Int!
    death: Int!
    allDamageDone: Int!
    heroDamageDone: Int! }
type SymmetraBestStats { eliminationMostInLife: Int!
    allDamageDoneMostInLife: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int! }
type SymmetraAverageStats { eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationPerLife: Int!
    allDamageDoneAvgPer10Min: Float! }
type SymmetraAwardsStats { medalsSilver: Int!
    medalsGold: Int!
    medals: Int! }
type SymmetraGameStats { timePlayed: Float!
    gamesPlayed: Int!
    gamesLost: Int! }
        type SymmetraStats {
          
  hero: SymmetraHeroStats
  combat: SymmetraCombatStats
  best: SymmetraBestStats
  average: SymmetraAverageStats
  awards: SymmetraAwardsStats
  game: SymmetraGameStats
        }
      

        # == zenyatta types ==

        
type ZenyattaHeroStats { transcendenceHealingBest: Int!
    transcendenceHealing: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int! }
type ZenyattaCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlow: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    multikill: Int!
    meleeFinalBlows: Int!
    multikills: Int! }
type ZenyattaAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int!
    turretsDestroyed: Int! }
type ZenyattaBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    meleeFinalBlowsMostInGame: Int! }
type ZenyattaAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type ZenyattaAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type ZenyattaGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int!
    gamesTied: Int! }
        type ZenyattaStats {
          
  hero: ZenyattaHeroStats
  combat: ZenyattaCombatStats
  assists: ZenyattaAssistsStats
  best: ZenyattaBestStats
  average: ZenyattaAverageStats
  awards: ZenyattaAwardsStats
  game: ZenyattaGameStats
        }
      

        # == roadhog types ==

        
type RoadhogHeroStats { enemiesHookedMostInGame: Int!
    enemiesHooked: Int!
    hooksAttempted: Int!
    wholeHogKillsMostInGame: Int!
    wholeHogKills: Int!
    hookAccuracyBestInGame: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    wholeHogKillsAvgPer10Min: Int!
    enemiesHookedAvgPer10Min: Int!
    selfHealingAvgPer10Min: Int!
    hookAccuracy: Int!
    wholeHogKillMostInGame: Int!
    wholeHogKill: Int! }
type RoadhogCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    environmentalKill: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    multikill: Int!
    meleeFinalBlow: Int!
    environmentalKills: Int! }
type RoadhogAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    turretsDestroyed: Int!
    turretDestroyed: Int! }
type RoadhogBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    meleeFinalBlowMostInGame: Int! }
type RoadhogAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type RoadhogAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int!
    card: Int! }
type RoadhogGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
type RoadhogMiscStats { shieldGeneratorDestroyed: Int! }
        type RoadhogStats {
          
  hero: RoadhogHeroStats
  combat: RoadhogCombatStats
  assists: RoadhogAssistsStats
  best: RoadhogBestStats
  average: RoadhogAverageStats
  awards: RoadhogAwardsStats
  game: RoadhogGameStats
  misc: RoadhogMiscStats
        }
      

        # == junkrat types ==

        
type JunkratHeroStats { enemyTrappedMostInGame: Int!
    enemyTrapped: Int!
    concussionMineKills: Int!
    concussionMineKillsMostInGame: Int!
    concussionMineKillsAvgPer10Min: Int!
    enemiesTrappedAvgPer10Min: Int!
    enemiesTrappedMostInGame: Int!
    enemiesTrapped: Int!
    ripTireKillsMostInGame: Int!
    ripTireKills: Int!
    ripTireKillsAvgPer10Min: Int! }
type JunkratCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKill: Int!
    allDamageDone: Int!
    objectiveKill: Int!
    objectiveTime: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    soloKills: Int!
    objectiveKills: Int!
    timeSpentOnFire: String!
    multikills: Int!
    environmentalKill: Int!
    meleeFinalBlow: Int! }
type JunkratBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    objectiveKillsMostInGame: Int!
    soloKillsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    multikillBest: Int!
    meleeFinalBlowMostInGame: Int! }
type JunkratAverageStats { barrierDamageDoneAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationPerLife: Int!
    allDamageDoneAvgPer10Min: Float!
    timeSpentOnFireAvgPer10Min: Int!
    eliminationsPerLife: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type JunkratAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    card: Int!
    cards: Int! }
type JunkratGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesLost: Int!
    gamesWon: Int!
    gamesTied: Int!
    winPercentage: Int! }
type JunkratAssistsStats { turretsDestroyed: Int!
    offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int! }
        type JunkratStats {
          
  hero: JunkratHeroStats
  combat: JunkratCombatStats
  best: JunkratBestStats
  average: JunkratAverageStats
  awards: JunkratAwardsStats
  game: JunkratGameStats
  assists: JunkratAssistsStats
        }
      

        # == zarya types ==

        
type ZaryaHeroStats { damageBlocked: Int!
    damageBlockedMostInGame: Int!
    gravitonSurgeKills: Int!
    gravitonSurgeKillsMostInGame: Int!
    highEnergyKillsMostInGame: Int!
    highEnergyKills: Int!
    projectedBarriersApplied: Int!
    averageEnergyBestInGame: Int!
    projectedBarriersAppliedMostInGame: Int!
    primaryFireAccuracy: Int!
    projectedBarriersAppliedAvgPer10Min: Int!
    highEnergyKillsAvgPer10Min: Int!
    gravitonSurgeKillsAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int!
    averageEnergy: Float! }
type ZaryaCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKill: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikill: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    soloKills: Int!
    multikills: Int!
    environmentalKills: Int!
    meleeFinalBlows: Int!
    meleeFinalBlow: Int! }
type ZaryaAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int!
    turretsDestroyed: Int! }
type ZaryaBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    soloKillsMostInGame: Int!
    meleeFinalBlowsMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type ZaryaAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type ZaryaAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type ZaryaGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int!
    gamesTied: Int! }
        type ZaryaStats {
          
  hero: ZaryaHeroStats
  combat: ZaryaCombatStats
  assists: ZaryaAssistsStats
  best: ZaryaBestStats
  average: ZaryaAverageStats
  awards: ZaryaAwardsStats
  game: ZaryaGameStats
        }
      

        # == soldier76 types ==

        
type Soldier76HeroStats { helixRocketsKillsMostInGame: Int!
    helixRocketsKills: Int!
    tacticalVisorKills: Int!
    tacticalVisorKillsMostInGame: Int!
    bioticFieldsDeployed: Int!
    bioticFieldHealingDone: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    tacticalVisorKillsAvgPer10Min: Int!
    helixRocketsKillsAvgPer10Min: Int!
    selfHealingAvgPer10Min: Int! }
type Soldier76CombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    elimination: Int!
    finalBlow: Int! }
type Soldier76AssistsStats { defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int!
    turretsDestroyed: Int! }
type Soldier76BestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    eliminationMostInLife: Int!
    eliminationMostInGame: Int!
    finalBlowMostInGame: Int! }
type Soldier76AverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type Soldier76AwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type Soldier76GameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type Soldier76Stats {
          
  hero: Soldier76HeroStats
  combat: Soldier76CombatStats
  assists: Soldier76AssistsStats
  best: Soldier76BestStats
  average: Soldier76AverageStats
  awards: Soldier76AwardsStats
  game: Soldier76GameStats
        }
      

        # == lucio types ==

        
type LucioCombatStats { allDamageDone: Int!
    heroDamageDone: Int!
    eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    objectiveKills: Int!
    objectiveTime: String!
    timeSpentOnFire: String!
    criticalHits: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    soloKill: Int!
    environmentalKills: Int!
    meleeFinalBlow: Int! }
type LucioBestStats { allDamageDoneMostInLife: Int!
    allDamageDoneMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    eliminationsMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    timeSpentOnFireMostInGame: Int!
    barrierDamageDoneMostInGame: Int!
    soloKillMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type LucioAverageStats { heroDamageDoneAvgPer10Min: Int!
    allDamageDoneAvgPer10Min: Float!
    barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    eliminationPerLife: Int!
    soloKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    eliminationsPerLife: Float! }
type LucioAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medals: Int!
    medalsGold: Int! }
type LucioGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesTied: Int!
    gamesLost: Int!
    gamesWon: Int!
    winPercentage: Int! }
type LucioHeroStats { soundBarriersProvided: Int!
    soundBarriersProvidedMostInGame: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int!
    soundBarriersProvidedAvgPer10Min: Int! }
type LucioAssistsStats { offensiveAssists: Int!
    offensiveAssistMostInGame: Int!
    defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int!
    offensiveAssistsMostInGame: Int! }
        type LucioStats {
          
  combat: LucioCombatStats
  best: LucioBestStats
  average: LucioAverageStats
  awards: LucioAwardsStats
  game: LucioGameStats
  hero: LucioHeroStats
  assists: LucioAssistsStats
        }
      

        # == dva types ==

        
type DvaHeroStats { selfDestructKills: Int!
    selfDestructKillsMostInGame: Int!
    mechsCalled: Int!
    mechsCalledMostInGame: Int!
    damageBlockedMostInGame: Int!
    damageBlocked: Int!
    mechDeaths: Int!
    selfDestructKillsAvgPer10Min: Int!
    mechsCalledAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int! }
type DvaCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    criticalHits: Int!
    heroDamageDone: Int!
    quickMeleeAccuracy: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    multikills: Int!
    environmentalKills: Int!
    barrierDamageDone: Int! }
type DvaBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillsMostInGame: Int!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    multikillBest: Int!
    barrierDamageDoneMostInGame: Int! }
type DvaAverageStats { criticalHitsAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    barrierDamageDoneAvgPer10Min: Int! }
type DvaAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type DvaGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesLost: Int!
    gamesWon: Int!
    gamesTied: Int!
    winPercentage: Int! }
type DvaAssistsStats { teleporterPadsDestroyed: Int!
    turretsDestroyed: Int!
    teleporterPadDestroyed: Int! }
type DvaMiscStats { shieldGeneratorDestroyed: Int! }
        type DvaStats {
          
  hero: DvaHeroStats
  combat: DvaCombatStats
  best: DvaBestStats
  average: DvaAverageStats
  awards: DvaAwardsStats
  game: DvaGameStats
  assists: DvaAssistsStats
  misc: DvaMiscStats
        }
      

        # == mei types ==

        
type MeiHeroStats { enemiesFrozen: Int!
    enemiesFrozenMostInGame: Int!
    damageBlockedMostInGame: Int!
    damageBlocked: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int!
    enemiesFrozenAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int!
    blizzardKillsMostInGame: Int!
    blizzardKills: Int!
    blizzardKillsAvgPer10Min: Int! }
type MeiCombatStats { eliminations: Int!
    deaths: Int!
    allDamageDone: Int!
    objectiveKill: Int!
    objectiveTime: String!
    criticalHits: Int!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    criticalHitAccuracy: Int!
    weaponAccuracy: Int!
    finalBlows: Int!
    soloKill: Int!
    objectiveKills: Int!
    multikill: Int!
    timeSpentOnFire: String! }
type MeiBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    objectiveKillMostInGame: Int!
    objectiveTimeMostInGame: String!
    criticalHitsMostInGame: Int!
    criticalHitsMostInLife: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    multikillBest: Int!
    soloKillMostInGame: Int!
    timeSpentOnFireMostInGame: Int! }
type MeiAverageStats { barrierDamageDoneAvgPer10Min: Int!
    criticalHitsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int! }
type MeiAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int! }
type MeiGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
type MeiAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int! }
        type MeiStats {
          
  hero: MeiHeroStats
  combat: MeiCombatStats
  best: MeiBestStats
  average: MeiAverageStats
  awards: MeiAwardsStats
  game: MeiGameStats
  assists: MeiAssistsStats
        }
      

        # == ana types ==

        
type AnaHeroStats { scopedAccuracyBestInGame: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    enemiesSlept: Int!
    nanoBoostsApplied: Int!
    nanoBoostAssists: Int!
    unscopedAccuracyBestInGame: Int!
    enemiesSleptMostInGame: Int!
    nanoBoostAssistsMostInGame: Int!
    nanoBoostsAppliedMostInGame: Int!
    bioticGrenadeKills: Int!
    selfHealingAvgPer10Min: Int!
    nanoBoostsAppliedAvgPer10Min: Int!
    nanoBoostAssistsAvgPer10Min: Int!
    enemiesSleptAvgPer10Min: Int!
    unscopedAccuracy: Int!
    scopedAccuracy: Int! }
type AnaCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKill: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    soloKills: Int!
    meleeFinalBlow: Int!
    finalBlow: Int!
    objectiveKill: Int!
    meleeFinalBlows: Int!
    multikill: Int! }
type AnaAssistsStats { offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int!
    turretDestroyed: Int! }
type AnaBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    soloKillsMostInGame: Int!
    meleeFinalBlowMostInGame: Int!
    finalBlowMostInGame: Int!
    objectiveKillMostInGame: Int!
    meleeFinalBlowsMostInGame: Int!
    multikillBest: Int! }
type AnaAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type AnaAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type AnaGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type AnaStats {
          
  hero: AnaHeroStats
  combat: AnaCombatStats
  assists: AnaAssistsStats
  best: AnaBestStats
  average: AnaAverageStats
  awards: AnaAwardsStats
  game: AnaGameStats
        }
      

        # == orisa types ==

        
type OrisaHeroStats { damageAmplified: Int!
    damageAmplifiedMostInGame: Int!
    damageBlocked: Int!
    damageBlockedMostInGame: Int!
    superchargerAssists: Int!
    superchargerAssistsMostInGame: Int!
    superchargerAssistsAvgPer10Min: Int!
    damageBlockedAvgPer10Min: Int!
    damageAmplifiedAvgPer10Min: Int! }
type OrisaCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikills: Int!
    environmentalKills: Int!
    meleeFinalBlows: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    finalBlow: Int!
    objectiveKill: Int! }
type OrisaAssistsStats { turretsDestroyed: Int!
    offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int! }
type OrisaBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillsMostInGame: Int!
    meleeFinalBlowsMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    eliminationMostInLife: Int!
    eliminationMostInGame: Int!
    finalBlowMostInGame: Int!
    objectiveKillMostInGame: Int!
    soloKillMostInGame: Int! }
type OrisaAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    eliminationPerLife: Int! }
type OrisaAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    cards: Int! }
type OrisaGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type OrisaStats {
          
  hero: OrisaHeroStats
  combat: OrisaCombatStats
  assists: OrisaAssistsStats
  best: OrisaBestStats
  average: OrisaAverageStats
  awards: OrisaAwardsStats
  game: OrisaGameStats
        }
      

        # == sombra types ==

        
type SombraAwardsStats { medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    medalsBronze: Int! }
type SombraGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesLost: Int!
    gamesWon: Int!
    winPercentage: Int! }
type SombraHeroStats { enemiesHacked: Int!
    enemiesEmPd: Int!
    enemiesHackedMostInGame: Int!
    enemiesEmPdMostInGame: Int!
    enemiesHackedAvgPer10Min: Int!
    enemiesEmPdAvgPer10Min: Int! }
type SombraCombatStats { eliminations: Int!
    death: Int!
    finalBlows: Int!
    allDamageDone: Int!
    objectiveKill: Int!
    objectiveTime: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    weaponAccuracy: Int!
    deaths: Int!
    soloKills: Int!
    objectiveKills: Int!
    meleeFinalBlow: Int!
    timeSpentOnFire: String!
    quickMeleeAccuracy: Int! }
type SombraAssistsStats { turretsDestroyed: Int!
    offensiveAssists: Int!
    offensiveAssistsMostInGame: Int!
    offensiveAssistsAvgPer10Min: Int! }
type SombraBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillMostInGame: Int!
    objectiveTimeMostInGame: String!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    objectiveKillsMostInGame: Int!
    soloKillsMostInGame: Int!
    meleeFinalBlowMostInGame: Int!
    timeSpentOnFireMostInGame: Int! }
type SombraAverageStats { barrierDamageDoneAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    meleeFinalBlowsAvgPer10Min: Int! }
        type SombraStats {
          
  awards: SombraAwardsStats
  game: SombraGameStats
  hero: SombraHeroStats
  combat: SombraCombatStats
  assists: SombraAssistsStats
  best: SombraBestStats
  average: SombraAverageStats
        }
      

        # == doomfist types ==

        
type DoomfistHeroStats { abilityDamageDone: Float!
    abilityDamageDoneMostInGame: Float!
    meteorStrikeKill: Int!
    meteorStrikeKillMostInGame: Int!
    shieldsCreated: Int!
    shieldsCreatedMostInGame: Int!
    shieldsCreatedAvgPer10Min: Int!
    meteorStrikeKillsAvgPer10Min: Int!
    abilityDamageDoneAvgPer10Min: Int!
    meteorStrikeKills: Int!
    meteorStrikeKillsMostInGame: Int! }
type DoomfistCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    environmentalKill: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    multikill: Int!
    quickMeleeAccuracy: Int!
    weaponAccuracy: Int!
    objectiveKill: Int! }
type DoomfistBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    weaponAccuracyBestInGame: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    soloKillMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    multikillBest: Int!
    objectiveKillMostInGame: Int!
    soloKillsMostInGame: Int! }
type DoomfistAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float! }
type DoomfistAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int! }
type DoomfistGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type DoomfistStats {
          
  hero: DoomfistHeroStats
  combat: DoomfistCombatStats
  best: DoomfistBestStats
  average: DoomfistAverageStats
  awards: DoomfistAwardsStats
  game: DoomfistGameStats
        }
      

        # == moira types ==

        
type MoiraHeroStats { coalescenceKills: Int!
    coalescenceKillsMostInGame: Int!
    coalescenceHealing: Int!
    coalescenceHealingMostInGame: Int!
    secondaryFireAccuracy: Int!
    coalescenceHealingAvgPer10Min: Int!
    coalescenceKillsAvgPer10Min: Int!
    selfHealing: Int!
    selfHealingMostInGame: Int!
    selfHealingAvgPer10Min: Int! }
type MoiraCombatStats { eliminations: Int!
    deaths: Int!
    finalBlows: Int!
    soloKills: Int!
    allDamageDone: Int!
    objectiveKills: Int!
    objectiveTime: String!
    multikill: Int!
    timeSpentOnFire: String!
    heroDamageDone: Int!
    barrierDamageDone: Int!
    multikills: Int!
    meleeFinalBlow: Int!
    quickMeleeAccuracy: Int! }
type MoiraAssistsStats { defensiveAssists: Int!
    defensiveAssistsMostInGame: Int!
    healingDone: Int!
    healingDoneMostInGame: Int!
    healingDoneAvgPer10Min: Int!
    defensiveAssistsAvgPer10Min: Int! }
type MoiraBestStats { eliminationsMostInLife: Int!
    allDamageDoneMostInLife: Int!
    killStreakBest: Int!
    allDamageDoneMostInGame: Int!
    eliminationsMostInGame: Int!
    finalBlowsMostInGame: Int!
    objectiveKillsMostInGame: Int!
    objectiveTimeMostInGame: String!
    multikillBest: Int!
    soloKillMostInGame: Int!
    timeSpentOnFireMostInGame: Int!
    heroDamageDoneMostInGame: Int!
    heroDamageDoneMostInLife: Int!
    barrierDamageDoneMostInGame: Int!
    meleeFinalBlowMostInGame: Int! }
type MoiraAverageStats { barrierDamageDoneAvgPer10Min: Int!
    timeSpentOnFireAvgPer10Min: Int!
    soloKillsAvgPer10Min: Int!
    objectiveTimeAvgPer10Min: Int!
    objectiveKillsAvgPer10Min: Int!
    finalBlowsAvgPer10Min: Int!
    eliminationsAvgPer10Min: Int!
    deathsAvgPer10Min: Int!
    heroDamageDoneAvgPer10Min: Int!
    eliminationsPerLife: Float!
    allDamageDoneAvgPer10Min: Float!
    meleeFinalBlowsAvgPer10Min: Int! }
type MoiraAwardsStats { medalsBronze: Int!
    medalsSilver: Int!
    medalsGold: Int!
    medals: Int!
    card: Int!
    cards: Int! }
type MoiraGameStats { timePlayed: Int!
    gamesPlayed: Int!
    gamesWon: Int!
    gamesTied: Int!
    gamesLost: Int!
    winPercentage: Int! }
        type MoiraStats {
          
  hero: MoiraHeroStats
  combat: MoiraCombatStats
  assists: MoiraAssistsStats
  best: MoiraBestStats
  average: MoiraAverageStats
  awards: MoiraAwardsStats
  game: MoiraGameStats
        }
      
  